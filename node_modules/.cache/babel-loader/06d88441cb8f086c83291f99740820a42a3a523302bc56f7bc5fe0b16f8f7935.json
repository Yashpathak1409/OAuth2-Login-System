{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Auth2/src/Components/Pages/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '902519970329-lrr56abglk2pltrq0obg4g18n5cmv3vd.apps.googleusercontent.com';\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!email || !password) {\n      setError('Please enter both email and password.');\n      return;\n    }\n    setLoading(true);\n    setTimeout(() => {\n      if (email === 'test@example.com' && password === 'password123') {\n        alert('Login successful!');\n        setError('');\n      } else {\n        setError('Invalid credentials.');\n      }\n      setLoading(false);\n    }, 1000);\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    try {\n      const res = await fetch('http://localhost:5014/api/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: credentialResponse.credential\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert(`Welcome ${data.name}!`);\n        console.log('User info from backend:', data);\n      } else {\n        setError(data.message || 'Google login failed on server.');\n      }\n    } catch (err) {\n      console.error('Google login error:', err);\n      setError('Google login failed. Please try again.');\n    }\n  };\n  const handleGoogleError = () => {\n    setError('Google login failed. Please try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-login-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Or login with\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            onSuccess: handleGoogleSuccess,\n            onError: handleGoogleError,\n            useOneTap: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"G/T6+fVRpp/0AVvTYcd6/2PGde0=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","jsxDEV","_jsxDEV","clientId","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleSubmit","e","preventDefault","setTimeout","alert","handleGoogleSuccess","credentialResponse","res","fetch","method","headers","body","JSON","stringify","token","credential","data","json","ok","name","console","log","message","err","handleGoogleError","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","disabled","onSuccess","onError","useOneTap","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/Auth2/src/Components/Pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css'; \nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n\nconst clientId = '902519970329-lrr56abglk2pltrq0obg4g18n5cmv3vd.apps.googleusercontent.com';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!email || !password) {\n      setError('Please enter both email and password.');\n      return;\n    }\n\n    setLoading(true);\n\n    setTimeout(() => {\n      if (email === 'test@example.com' && password === 'password123') {\n        alert('Login successful!');\n        setError('');\n      } else {\n        setError('Invalid credentials.');\n      }\n      setLoading(false);\n    }, 1000);\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    try {\n      const res = await fetch('http://localhost:5014/api/google-login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token: credentialResponse.credential }),\n      });\n\n      const data = await res.json();\n      if (res.ok) {\n        alert(`Welcome ${data.name}!`);\n        console.log('User info from backend:', data);\n      } else {\n        setError(data.message || 'Google login failed on server.');\n      }\n    } catch (err) {\n      console.error('Google login error:', err);\n      setError('Google login failed. Please try again.');\n    }\n  };\n\n  const handleGoogleError = () => {\n    setError('Google login failed. Please try again.');\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <div className=\"login-container\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <h2>Login</h2>\n          {error && <p className=\"error\">{error}</p>}\n\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={loading}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            disabled={loading}\n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Logging in...' : 'Log In'}\n          </button>\n\n          <div className=\"google-login-section\">\n            <p>Or login with</p>\n            <GoogleLogin\n              onSuccess={handleGoogleSuccess}\n              onError={handleGoogleError}\n              useOneTap={false}\n            />\n          </div>\n        </form>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}